import org.openqa.selenium.chrome.ChromeDriver
import org.openqa.selenium.chrome.ChromeOptions

repositories {
    mavenLocal()
    jcenter()
}

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:${SerenityCoreVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile "net.serenity-bdd:serenity-core:${SerenityCoreVersion}"
    compile "net.serenity-bdd:serenity-screenplay:${SerenityCoreVersion}"
    compile "net.serenity-bdd:serenity-screenplay-webdriver:${SerenityCoreVersion}"
    compile "net.serenity-bdd:serenity-cucumber:${SerenityCucumberVersion}"
    compile "org.assertj:assertj-core:${assertJVersion}"
    compile "org.slf4j:slf4j-simple:${slf4jVersion}"
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    testCompile "junit:junit:${junitVersion}"
    compile fileTree(include: ['*.jar'], dir: 'libs')

    //IntegrationTesting dependencies
//    compile 'org.slf4j:slf4j-api:1.7.13'
//    compile 'io.rest-assured:json-schema-validator:3.0.3'
//    compile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: '2.0.7'

}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    def nodeConfig = System.getProperty('browserConfig')
    Properties properties = new Properties()
    if (nodeConfig == null) {
        properties.load(project.file(System.getProperty("user.dir") + '/src/test/resources/browser_configs/chrome.properties').newDataInputStream())

    } else {
        properties.load(project.file(System.getProperty("user.dir") + '/src/test/resources/browser_configs/' + nodeConfig + '.properties').newDataInputStream())
    }

    Enumeration<String> enums = (Enumeration<String>) properties.propertyNames()
    while (enums.hasMoreElements()) {
        String key = enums.nextElement()
        String value = properties.getProperty(key)
        systemProperties[key] = value
    }
}

gradle.startParameter.continueOnFailure = true
